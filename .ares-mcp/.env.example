# ARES System - Environment Variables Template
# Copy this file to .env and fill in your actual values
# NEVER commit .env to Git - it contains sensitive credentials

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================

# Environment: development, staging, production
NODE_ENV=development

# Application
APP_NAME=ARES
APP_VERSION=2.3.0
PORT=5000
HOST=0.0.0.0

# Logging
LOG_LEVEL=info
LOG_FILE=.ares-mcp/logs/ares.log
AUDIT_LOG_FILE=.ares-mcp/logs/audit.log

# ============================================================================
# WHATSAPP API (Meta/Facebook Cloud API)
# ============================================================================
# Get these from: https://developers.facebook.com/

WHATSAPP_ACCESS_TOKEN=your_access_token_here
WHATSAPP_PHONE_NUMBER_ID=your_phone_number_id_here
WHATSAPP_VERIFY_TOKEN=your_custom_verify_token_here
WHATSAPP_API_VERSION=v22.0
WHATSAPP_AUTHORIZED_NUMBER=+61432154351

# ============================================================================
# XERO API (Accounting Integration)
# ============================================================================
# Get these from: https://developer.xero.com/

XERO_CLIENT_ID=your_client_id_here
XERO_CLIENT_SECRET=your_client_secret_here
XERO_REDIRECT_URI=http://localhost:8080/callback
XERO_SCOPES=accounting.transactions,accounting.contacts

# ============================================================================
# DATABASE
# ============================================================================

# PostgreSQL (Production)
DATABASE_URL=postgresql://username:password@localhost:5432/ares_db

# SQLite (Development)
# DATABASE_URL=sqlite:///./ares_dev.db

# Database pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# ============================================================================
# REDIS (Caching & Rate Limiting)
# ============================================================================

REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your_redis_password_here
REDIS_DB=0

# ============================================================================
# SECURITY & ENCRYPTION
# ============================================================================

# Secret key for Flask sessions
SECRET_KEY=generate_a_random_secret_key_here

# JWT Configuration
JWT_SECRET=generate_a_random_jwt_secret_here
JWT_ALGORITHM=RS256
JWT_EXPIRY=24h

# Encryption key (32 bytes, base64 encoded)
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_KEY=generate_encryption_key_with_fernet

# API Key for ARES API
ARES_API_KEY=generate_a_random_api_key_here

# ============================================================================
# AUTHENTICATION
# ============================================================================

# Session configuration
SESSION_COOKIE_SECURE=false  # Set to true in production (HTTPS)
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=Strict
PERMANENT_SESSION_LIFETIME=3600

# Password requirements
PASSWORD_MIN_LENGTH=12
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SPECIAL=true

# ============================================================================
# RATE LIMITING
# ============================================================================

RATE_LIMIT_ENABLED=true
RATE_LIMIT_STORAGE=redis
RATE_LIMIT_DEFAULT=200 per day, 50 per hour

# Endpoint-specific limits
RATE_LIMIT_WEBHOOK=100 per minute
RATE_LIMIT_SEND=10 per minute
RATE_LIMIT_API=100 per hour

# ============================================================================
# CORS & SECURITY HEADERS
# ============================================================================

# Allowed origins (comma-separated)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5000

# Allowed domains for URL validation
ALLOWED_DOMAINS=api.whatsapp.com,graph.facebook.com,api.xero.com

# Security Headers
ENABLE_HSTS=false  # Set to true in production
HSTS_MAX_AGE=31536000
ENABLE_CSP=true
CSP_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline'

# ============================================================================
# EXTERNAL SERVICES
# ============================================================================

# Email (for notifications and alerts)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@example.com
SMTP_PASSWORD=your_email_password_here
SMTP_FROM=noreply@ares-system.com

# Sentry (Error Tracking)
SENTRY_DSN=https://your_sentry_dsn_here@sentry.io/project_id
SENTRY_ENVIRONMENT=development

# Slack (Alerts & Notifications)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# PagerDuty (Incident Management)
PAGERDUTY_API_KEY=your_pagerduty_api_key_here

# ============================================================================
# NGROK (Development Webhook Tunnel)
# ============================================================================

NGROK_AUTHTOKEN=your_ngrok_auth_token_here
NGROK_REGION=au  # Australia

# ============================================================================
# MONITORING & LOGGING
# ============================================================================

# Enable audit logging
AUDIT_LOGGING_ENABLED=true
AUDIT_LOG_RETENTION_DAYS=365

# Performance monitoring
APM_ENABLED=false
APM_SERVICE_NAME=ares-system

# Log encryption (for sensitive data in logs)
LOG_ENCRYPTION_ENABLED=false
LOG_ENCRYPTION_KEY=generate_log_encryption_key_here

# ============================================================================
# FEATURE FLAGS
# ============================================================================

FEATURE_WHATSAPP_ENABLED=true
FEATURE_XERO_ENABLED=true
FEATURE_MCP_SERVER_ENABLED=true
FEATURE_AUTO_RESPONDER_ENABLED=false
FEATURE_BROWSER_AUTOMATION_ENABLED=true

# ============================================================================
# DEVELOPMENT & TESTING
# ============================================================================

# Debug mode (NEVER enable in production)
DEBUG=false
FLASK_DEBUG=false

# Testing
TESTING=false
TEST_DATABASE_URL=sqlite:///:memory:

# Mock services (for testing)
MOCK_WHATSAPP_API=false
MOCK_XERO_API=false

# ============================================================================
# BROWSER AUTOMATION (Playwright/Selenium)
# ============================================================================

PLAYWRIGHT_BROWSER=chromium
PLAYWRIGHT_CHANNEL=chrome
PLAYWRIGHT_USER_DATA_DIR=C:\Users\riord\AppData\Local\Google\Chrome\User Data
PLAYWRIGHT_HEADLESS=false

# ============================================================================
# BACKUP & DISASTER RECOVERY
# ============================================================================

# Backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # 2 AM daily
BACKUP_RETENTION_DAYS=30
BACKUP_LOCATION=/backups/ares

# S3 backup (optional)
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_S3_BUCKET=ares-backups
AWS_REGION=ap-southeast-2  # Sydney

# ============================================================================
# COMPLIANCE & GOVERNANCE
# ============================================================================

# Data retention
DATA_RETENTION_DAYS=365
PII_RETENTION_DAYS=90

# Privacy settings
GDPR_ENABLED=true
ANONYMIZE_LOGS=true
CONSENT_REQUIRED=true

# ============================================================================
# NOTES
# ============================================================================

# How to use this file:
# 1. Copy this file: cp .env.example .env
# 2. Fill in all "your_*_here" placeholders with actual values
# 3. Never commit .env to Git
# 4. Use different values for dev/staging/production
# 5. Rotate credentials every 90 days

# How to generate secure random values:
# - Python: python -c "import secrets; print(secrets.token_urlsafe(32))"
# - OpenSSL: openssl rand -base64 32
# - PowerShell: [Convert]::ToBase64String((1..32 | ForEach-Object { Get-Random -Minimum 0 -Maximum 256 }))

# Security reminders:
# - Use strong, unique values for each secret
# - Never reuse credentials across environments
# - Store production secrets in a secrets manager (AWS Secrets Manager, Azure Key Vault, HashiCorp Vault)
# - Enable 2FA/MFA on all external service accounts
# - Regularly audit and rotate credentials
